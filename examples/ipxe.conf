#!ipxe

echo booting LINUX from iPXE

# network setup
# ------------------------------------------------------------------

# try to get an IP via dhcp
dhcp

# or use a static ipv4 + dns
#ifopen net0
#set net0/ip 192.168.0.100
#set net0/netmask 255.255.255.0
#set net0/gateway 192.168.0.1
#set dns 8.8.8.8

# or use a static ipv6 + dns
# ip6
#set net0/ip6:ipv6 fc00:abcd::1
#set net0/len6:int8 64
#set net0/gateway6:ipv6 fc00:abcd:ffff::1
#set net0/dns6:ipv6 2001:4860:4860::8888

# show config
ifstat

# first host reachable ?
:test_primary
ping --count 1 ipxe1.example.org && goto primary_host || echo primary host not reachable

# second host reachable ?
:test_secondary
ping --count 1 ipxe2.example.org && goto secondary_host || echo secondary host not reachable

# fatal
goto errorhandler

# primary server
# ------------------------------------------------------------------

# test connectivity to host 1
:primary_host
echo ipxe1.example.org reachable
echo chainloading primary cloud host configuration..

# chainload common ipxe configuration
# open shell as fallback
# transmit system serial
chain http://ipxe1.example.org/myconfig.ipxe?serial=${serial} || errorhandler

# secondary server
# ------------------------------------------------------------------

:secondary_host
echo ipxe2.example.org reachable
echo chainloading secondary cloud host configuration..

# chainload common ipxe configuration
# open shell as fallback
# transmit system serial
chain http://ipxe2.example.org/myconfig.ipxe?serial=${serial} || errorhandler

# error handler
# ------------------------------------------------------------------

# booting failed, display message and open shell
:errorhandler

echo system boot failed
shell